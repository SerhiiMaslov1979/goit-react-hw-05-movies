{"version":3,"file":"static/js/716.5d7e7976.chunk.js","mappings":"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","sources":["components/BackLink/BackLink.jsx","components/Loader/Loader.styled.jsx","components/Loader/Loader.jsx","components/MoviesGalleryItem/MoviesGalleryItem.1.jsx","components/MoviesGallery/MoviesGallery.styled.jsx","components/MoviesGallery/MoviesGallery.jsx","components/SearchBar/SearchBar.styled.jsx","components/SearchBar/SearchBar.jsx","pages/movies.jsx","servise/api.js"],"sourcesContent":["import { Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\nconst StyledLink = styled(Link)`\n  display: inline-flex;\n  align-items: center;\n  gap: 4px;\n  padding: 8px 0;\n  color: black;\n  text-decoration: none;\n  font-weight: 500;\n  text-transform: uppercase;\n\n  :hover {\n    color: orangered;\n  }\n`;\n\nexport const BackLink = ({ to, children }) => {\n  return <StyledLink to={to}>{children}</StyledLink>;\n};\n","import styled from 'styled-components';\n\nexport const LoaderBackdrop = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  z-index: 1;\n\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  width: 100vw;\n  height: 100vh;\n  background-color: rgba(185, 228, 201, 0.2);\n`;\n","import React from 'react';\nimport { LoaderBackdrop } from '../Loader/Loader.styled';\nimport ScaleLoader from 'react-spinners/ScaleLoader';\n\nconst Loader = () => {\n  return (\n    <LoaderBackdrop>\n      <ScaleLoader\n        color=\"#36d7b7\"\n        size={150}\n        css={{ position: 'absolute', top: '25%', left: '45%' }}\n      />\n    </LoaderBackdrop>\n  );\n};\n\nexport default Loader;\n","import React from 'react';\nimport NoPoster from '../Image/sorry-image-not-available.jpg';\nimport { Link, useLocation } from 'react-router-dom';\n\nconst MoviesGalleryItem = ({ movie }) => {\n  const { poster_path, id, title } = movie;\n  const location = useLocation();\n\n  return (\n    <div>\n      <Link to={`/movies/${id}`} state={{ from: location }}>\n        <img\n          src={\n            poster_path\n              ? `https://image.tmdb.org/t/p/original${poster_path}`\n              : NoPoster\n          }\n          alt={title}\n          width=\"250\"\n        />\n        <h3>{title}</h3>\n      </Link>\n    </div>\n  );\n};\nexport default MoviesGalleryItem;\n","import styled from 'styled-components';\n\nexport const List = styled.ul`\n  display: grid;\n  grid-template-columns: repeat(4, 1fr);\n  gap: 12px;\n  max-width: calc(100vw - 48px);\n  list-style-type: none;\n  padding: 12px;\n  font-size: 10px;\n  text-align: center;\n`;\n\nexport const Item = styled.li`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  text-align: center;\n`;\n","import MoviesGalleryItem from 'components/MoviesGalleryItem/MoviesGalleryItem.1';\nimport React from 'react';\nimport { List } from './MoviesGallery.styled';\nimport { useLocation } from 'react-router-dom';\n\nexport const MoviesGallery = ({ movies }) => {\n  const location = useLocation();\n  return (\n    <List>\n      {movies.map(movie => (\n        <MoviesGalleryItem\n          movie={movie}\n          key={movie.id}\n          state={{ from: location }}\n        />\n      ))}\n    </List>\n  );\n};\n","import styled from 'styled-components';\n\nexport const Form = styled.form`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  justify-content: center;\n  margin-bottom: 20px;\n`;\n\nexport const Input = styled.input`\n  border: 1px solid #ccc;\n  border-radius: 4px;\n  padding: 8px;\n  margin-right: 15px;\n  font-size: 16px;\n`;\n\nexport const Button = styled.button`\n  background-color: #b5d1f2;\n  border: 1px solid #0d57aa;\n  border-radius: 4px;\n  padding: 8px 18px;\n  font-size: 16px;\n  cursor: pointer;\n  transition: background-color 0.2s ease-in-out, color 0.2s ease-in-out;\n\n  &:hover,\n  &:focus {\n    background-color: #0d57aa;\n    color: #ffffff;\n  }\n`;\n","import React from 'react';\nimport { Field, Form, Formik } from 'formik';\nimport { Button, Input } from './SearchBar.styled';\n\nexport const SearchBar = ({ onSubmit }) => {\n  return (\n    <>\n      <Formik\n        initialValues={{ query: ' ' }}\n        onSubmit={(values, { resetForm }) => {\n          onSubmit(values.query.trim());\n          resetForm();\n        }}\n      >\n        <Form>\n          <Field\n            as={Input}\n            autoComplete=\"off\"\n            placeholder=\"Search movie...\"\n            name=\"query\"\n            autoFocus\n          />\n          <Button type=\"submit\">Search</Button>\n        </Form>\n      </Formik>\n    </>\n  );\n};\n","// import React, { useEffect, useRef, useState } from 'react';\n// import { useLocation, useSearchParams } from 'react-router-dom';\n// import { getMovieByQuery } from '../serviсe/api';\n// import { BackLink } from '../components/BackLink/BackLink';\n// import Loader from '../components/Loader/Loader';\n// import { MoviesGallery } from '../components/MoviesGallery/MoviesGallery';\n// import { SearchBar } from '../components/SearchBar/SearchBar';\n\n// const MoviesPage = () => {\n//   const [isLoading, setIsLoading] = useState(false);\n//   const [error, setError] = useState(null);\n//   const [movies, setMovies] = useState([]);\n\n//   const [searchParams, setSearchParams] = useSearchParams();\n//   const query = searchParams.get('query') || '';\n\n//   const location = useLocation();\n//   const backLinkLocationRef = useRef(location.state?.from ?? '/');\n\n//   useEffect(() => {\n//     (async () => {\n//       try {\n//         if (query === '') return;\n//         setIsLoading(true);\n//         setError(null);\n\n//         const data = await getMovieByQuery(query);\n\n//         if (data.total_results === 0) {\n//           alert(\n//             `Sorry, there are no images matching your search query '${query}'. Please try again.`\n//           );\n//           return;\n//         }\n//         setMovies(data.results);\n//       } catch (error) {\n//         setError(error.message);\n//       } finally {\n//         setIsLoading(false);\n//       }\n//     })();\n//   }, [query, location.search]);\n\n//   const updateQueryString = value => {\n//     if (value === '') {\n//       setSearchParams({});\n//       return;\n//     }\n//     setSearchParams({ query: value });\n//     setMovies([]);\n//   };\n\n//   return (\n//     <>\n//       <BackLink to={backLinkLocationRef.current} children={'Go back'} />\n//       <SearchBar onSubmit={updateQueryString} />\n//       {isLoading && <Loader />}\n\n//       {error && !isLoading && (\n//         <h2 style={{ textAlign: 'center' }}>\n//           Try again. Something went wrong!\n//         </h2>\n//       )}\n\n//       {!error && !isLoading && movies.length > 0 && (\n//         <MoviesGallery movies={movies} state={{ from: location }} />\n//       )}\n//     </>\n//   );\n// };\n\n// export default MoviesPage;\nimport React, { useEffect, useRef, useState } from 'react';\nimport { useLocation, useSearchParams } from 'react-router-dom';\nimport { getMovieByQuery } from '../servise/api';\nimport { BackLink } from '../components/BackLink/BackLink';\nimport Loader from '../components/Loader/Loader';\nimport { MoviesGallery } from '../components/MoviesGallery/MoviesGallery';\nimport { SearchBar } from '../components/SearchBar/SearchBar';\n\nconst MoviesPage = () => {\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [movies, setMovies] = useState([]);\n\n  const [searchParams, setSearchParams] = useSearchParams();\n  const query = searchParams.get('query') || '';\n\n  const location = useLocation();\n  const backLinkLocationRef = useRef(location.state?.from ?? '/');\n\n  useEffect(() => {\n    (async () => {\n      try {\n        if (query === '') return;\n        setIsLoading(true);\n        setError(null);\n\n        const data = await getMovieByQuery(query);\n\n        if (data.total_results === 0) {\n          alert(\n            `Sorry, there are no images matching your search query '${query}'. Please try again.`\n          );\n          return;\n        }\n        setMovies(data.results);\n      } catch (error) {\n        setError(error.message);\n      } finally {\n        setIsLoading(false);\n      }\n    })();\n  }, [query, location.search]);\n\n  const updateQueryString = value => {\n    if (value === '') {\n      setSearchParams({});\n      return;\n    }\n    setSearchParams({ query: value });\n    setMovies([]);\n  };\n\n  const moviesPerPage = 21; // Кількість постерів на сторінці\n\n  return (\n    <>\n      <BackLink to={backLinkLocationRef.current} children={'Go back'} />\n      <SearchBar onSubmit={updateQueryString} />\n      {isLoading && <Loader />}\n\n      {error && !isLoading && (\n        <h2 style={{ textAlign: 'center' }}>\n          Try again. Something went wrong!\n        </h2>\n      )}\n\n      {!error && !isLoading && movies.length > 0 && (\n        <MoviesGallery\n          movies={movies}\n          perPage={moviesPerPage}\n          state={{ from: location }}\n        />\n      )}\n    </>\n  );\n};\n\nexport default MoviesPage;\n","import axios from 'axios';\n\nconst apiKey = 'a7b06e7a05ba5e2eb883b74f2a4c575a';\n\n//trending/get-trending список найпопулярніших фільмів на сьогодні для створення колекції на головній сторінці.\n\nexport async function getTrendingMovies() {\n  try {\n    const { data } = await axios.get(\n      `https://api.themoviedb.org/3/trending/movie/day?api_key=${apiKey}&include_adult=false`\n    );\n    return data;\n  } catch (error) {\n    console.log('Error: ', error);\n  }\n}\n//search/search-movies пошук фільму за ключовим словом на сторінці фільмів.\n\nexport async function getMovieByQuery(query) {\n  try {\n    const { data } = await axios.get(\n      `https://api.themoviedb.org/3/search/movie?api_key=${apiKey}&query=${query}&page=1&include_adult=false`\n    );\n    return data;\n  } catch (error) {\n    console.log('Error: ', error);\n  }\n}\n\n//movies/get-movie-details запит повної інформації про фільм для сторінки кінофільму.\n\nexport async function getMovieDetails(movieId) {\n  try {\n    const { data } = await axios.get(\n      `https://api.themoviedb.org/3/movie/${movieId}?api_key=${apiKey}&language=en-US`\n    );\n\n    return data;\n  } catch (error) {\n    console.log('Error: ', error);\n  }\n}\n\n//movies/get-movie-credits запит інформації про акторський склад для сторінки кінофільму.\n\nexport const getMoviesCredits = async movieId => {\n  try {\n    const { data } = await axios.get(\n      `https://api.themoviedb.org/3/movie/${movieId}/credits?api_key=${apiKey}`\n    );\n    // console.log(data.cast);\n    return data.cast;\n  } catch (error) {\n    console.log('Error: ', error);\n  }\n};\n\n//movies/get-movie-reviews запит оглядів для сторінки кінофільму.\n\nexport const getMoviesReviews = async movieId => {\n  try {\n    const { data } = await axios.get(\n      `https://api.themoviedb.org/3/movie/${movieId}/reviews?api_key=${apiKey}`\n    );\n    return data.results;\n  } catch (error) {\n    console.log('Error: ', error);\n  }\n};\n"],"names":["StyledLink","styled","Link","BackLink","to","children","LoaderBackdrop","color","size","css","position","top","left","movie","poster_path","id","title","location","useLocation","state","from","src","NoPoster","alt","width","List","MoviesGallery","movies","map","Input","Button","SearchBar","onSubmit","initialValues","query","values","resetForm","trim","as","autoComplete","placeholder","name","autoFocus","type","useState","isLoading","setIsLoading","error","setError","setMovies","useSearchParams","searchParams","setSearchParams","get","backLinkLocationRef","useRef","useEffect","getMovieByQuery","data","total_results","alert","results","message","search","current","value","Loader","style","textAlign","length","perPage","apiKey","getTrendingMovies","axios","console","log","getMovieDetails","movieId","getMoviesCredits","cast","getMoviesReviews"],"sourceRoot":""}