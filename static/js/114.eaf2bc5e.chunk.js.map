{"version":3,"file":"static/js/114.eaf2bc5e.chunk.js","mappings":"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","sources":["components/Loader/Loader.styled.jsx","components/Loader/Loader.jsx","components/MoviesGalleryItem/MoviesGalleryItem.styled.jsx","components/MoviesGalleryItem/MoviesGalleryItem.jsx","components/MoviesGallery/MoviesGallery.styled.jsx","components/MoviesGallery/MoviesGallery.jsx","pages/home.jsx","servise/api.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const LoaderBackdrop = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  z-index: 1;\n\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  width: 100vw;\n  height: 100vh;\n  background-color: rgba(185, 228, 201, 0.2);\n`;\n","import React from 'react';\nimport { LoaderBackdrop } from './Loader.styled';\nimport ScaleLoader from 'react-spinners/ScaleLoader';\n\nconst Loader = () => {\n  return (\n    <LoaderBackdrop>\n      <ScaleLoader\n        color=\"#36d7b7\"\n        size={150}\n        css={{ position: 'absolute', top: '25%', left: '45%' }}\n      />\n    </LoaderBackdrop>\n  );\n};\n\nexport default Loader;\n","import styled from 'styled-components';\n\nexport const Item = styled.li`\n  padding: 8px;\n  max-width: 100%;\n  width: 260px;\n  height: 100%;\n\n  img {\n    display: block;\n    min-height: 100%;\n    height: 420px;\n    width: 100%;\n\n    border-top-left-radius: 8px;\n    border-top-right-radius: 8px;\n    transition: transform 250ms linear;\n    transform: scale(1);\n\n    object-fit: cover;\n    object-position: center;\n\n    &:hover {\n      transform: scale(1.1);\n    }\n  }\n`;\n\nexport const MovieTitle = styled.h2`\n  padding: 8px;\n  max-width: 100%;\n\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n\n  text-align: center;\n  font-size: 14px;\n  font-weight: 700;\n`;\n","import React from 'react';\n// import NoPoster from 'assets/no-poster-available.jpg';\nimport { Link, useLocation } from 'react-router-dom';\nimport { Item, MovieTitle } from './MoviesGalleryItem.styled';\n\nexport const MoviesGalleryItem = ({ movie: { poster_path, id, title } }) => {\n  const location = useLocation();\n  return (\n    <Item>\n      <Link to={`/movies/${id}`} state={{ from: location }}>\n        {/* <img\n          src={\n            poster_path\n              ? `https://image.tmdb.org/t/p/original${poster_path}`\n              : NoPoster\n          }\n          alt={title}\n          width=\"200\"\n        /> */}\n        <MovieTitle>{title}</MovieTitle>\n      </Link>\n    </Item>\n  );\n};\n","import styled from 'styled-components';\n\nexport const List = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  align-items: center;\n  justify-content: center;\n  gap: 12px;\n  max-width: calc(100vw - 48px);\n  list-style-type: none;\n  padding: 12px;\n`;\n","import { MoviesGalleryItem } from 'components/MoviesGalleryItem/MoviesGalleryItem';\nimport React from 'react';\nimport { List } from './MoviesGallery.styled';\nimport { useLocation } from 'react-router-dom';\n\nexport const MoviesGallery = ({ movies }) => {\n  const location = useLocation();\n  return (\n    <List>\n      {movies.map(movie => (\n        <MoviesGalleryItem\n          movie={movie}\n          key={movie.id}\n          state={{ from: location }}\n        />\n      ))}\n    </List>\n  );\n};\n","import Loader from '../components/Loader/Loader';\nimport { MoviesGallery } from 'components/MoviesGallery/MoviesGallery';\nimport React, { useEffect, useState } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport { getTrendingMovies } from '../servise/api';\n\nconst HomePage = () => {\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [movies, setMovies] = useState([]);\n  const location = useLocation();\n\n  useEffect(() => {\n    const fetchMovies = async () => {\n      try {\n        setError(null);\n        const { results } = await getTrendingMovies();\n        setMovies(results);\n      } catch (error) {\n        setError(error.message);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    fetchMovies();\n  }, []);\n\n  return (\n    <>\n      {isLoading && <Loader />}\n\n      {error && !isLoading && (\n        <h2 style={{ textAlign: 'center' }}>Помилка. Спробуйте ще!</h2>\n      )}\n\n      {!error && !isLoading && movies.length > 0 && (\n        <MoviesGallery movies={movies} state={{ from: location }} />\n      )}\n    </>\n  );\n};\n\nexport default HomePage;\n","import axios from 'axios';\n\nconst apiKey = 'a7b06e7a05ba5e2eb883b74f2a4c575a';\n\n//trending/get-trending список найпопулярніших фільмів на сьогодні для створення колекції на головній сторінці.\n\nexport async function getTrendingMovies() {\n  try {\n    const { data } = await axios.get(\n      `https://api.themoviedb.org/3/trending/movie/day?api_key=${apiKey}&include_adult=false`\n    );\n    return data;\n  } catch (error) {\n    console.log('Error: ', error);\n  }\n}\n//search/search-movies пошук фільму за ключовим словом на сторінці фільмів.\n\nexport async function getMovieByQuery(query) {\n  try {\n    const { data } = await axios.get(\n      `https://api.themoviedb.org/3/search/movie?api_key=${apiKey}&query=${query}&page=1&include_adult=false`\n    );\n    return data;\n  } catch (error) {\n    console.log('Error: ', error);\n  }\n}\n\n//movies/get-movie-details запит повної інформації про фільм для сторінки кінофільму.\n\nexport async function getMovieDetails(movieId) {\n  try {\n    const { data } = await axios.get(\n      `https://api.themoviedb.org/3/movie/${movieId}?api_key=${apiKey}&language=en-US`\n    );\n\n    return data;\n  } catch (error) {\n    console.log('Error: ', error);\n  }\n}\n\n//movies/get-movie-credits запит інформації про акторський склад для сторінки кінофільму.\n\nexport const getMoviesCredits = async movieId => {\n  try {\n    const { data } = await axios.get(\n      `https://api.themoviedb.org/3/movie/${movieId}/credits?api_key=${apiKey}`\n    );\n    // console.log(data.cast);\n    return data.cast;\n  } catch (error) {\n    console.log('Error: ', error);\n  }\n};\n\n//movies/get-movie-reviews запит оглядів для сторінки кінофільму.\n\nexport const getMoviesReviews = async movieId => {\n  try {\n    const { data } = await axios.get(\n      `https://api.themoviedb.org/3/movie/${movieId}/reviews?api_key=${apiKey}`\n    );\n    return data.results;\n  } catch (error) {\n    console.log('Error: ', error);\n  }\n};\n"],"names":["LoaderBackdrop","styled","color","size","css","position","top","left","Item","MovieTitle","MoviesGalleryItem","movie","id","poster_path","title","location","useLocation","to","state","from","List","MoviesGallery","movies","map","useState","isLoading","setIsLoading","error","setError","setMovies","useEffect","fetchMovies","getTrendingMovies","results","message","style","textAlign","length","apiKey","axios","data","console","log","getMovieByQuery","query","getMovieDetails","movieId","getMoviesCredits","cast","getMoviesReviews"],"sourceRoot":""}