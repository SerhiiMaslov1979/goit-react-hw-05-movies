{"version":3,"file":"static/js/613.e4b7e683.chunk.js","mappings":"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","sources":["components/Loader/Loader.styled.jsx","components/Loader/Loader.jsx","components/MoviesGalleryItem/MoviesGalleryItem.styled.jsx","components/MoviesGalleryItem/MoviesGalleryItem.jsx","components/MoviesGallery/MoviesGallery.styled.jsx","components/MoviesGallery/MoviesGallery.jsx","components/BackLink/BackLink.jsx","components/SearchBar/SearchBar.jsx","pages/movies.jsx","servise/api.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const LoaderBackdrop = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  z-index: 1;\n\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  width: 100vw;\n  height: 100vh;\n  background-color: rgba(185, 228, 201, 0.2);\n`;\n","import React from 'react';\nimport { LoaderBackdrop } from './Loader.styled';\nimport ScaleLoader from 'react-spinners/ScaleLoader';\n\nconst Loader = () => {\n  return (\n    <LoaderBackdrop>\n      <ScaleLoader\n        color=\"#36d7b7\"\n        size={150}\n        css={{ position: 'absolute', top: '25%', left: '45%' }}\n      />\n    </LoaderBackdrop>\n  );\n};\n\nexport default Loader;\n","import styled from 'styled-components';\n\nexport const Item = styled.li`\n  padding: 8px;\n  max-width: 100%;\n  width: 260px;\n  height: 100%;\n\n  img {\n    display: block;\n    min-height: 100%;\n    height: 420px;\n    width: 100%;\n\n    border-top-left-radius: 8px;\n    border-top-right-radius: 8px;\n    transition: transform 250ms linear;\n    transform: scale(1);\n\n    object-fit: cover;\n    object-position: center;\n\n    &:hover {\n      transform: scale(1.1);\n    }\n  }\n`;\n\nexport const MovieTitle = styled.h2`\n  padding: 8px;\n  max-width: 100%;\n\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n\n  text-align: center;\n  font-size: 14px;\n  font-weight: 700;\n`;\n","import React from 'react';\n// import NoPoster from 'assets/no-poster-available.jpg';\nimport { Link, useLocation } from 'react-router-dom';\nimport { Item, MovieTitle } from './MoviesGalleryItem.styled';\n\nexport const MoviesGalleryItem = ({ movie: { poster_path, id, title } }) => {\n  const location = useLocation();\n  return (\n    <Item>\n      <Link to={`/movies/${id}`} state={{ from: location }}>\n        {/* <img\n          src={\n            poster_path\n              ? `https://image.tmdb.org/t/p/original${poster_path}`\n              : NoPoster\n          }\n          alt={title}\n          width=\"200\"\n        /> */}\n        <MovieTitle>{title}</MovieTitle>\n      </Link>\n    </Item>\n  );\n};\n","import styled from 'styled-components';\n\nexport const List = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  align-items: center;\n  justify-content: center;\n  gap: 12px;\n  max-width: calc(100vw - 48px);\n  list-style-type: none;\n  padding: 12px;\n`;\n","import { MoviesGalleryItem } from 'components/MoviesGalleryItem/MoviesGalleryItem';\nimport React from 'react';\nimport { List } from './MoviesGallery.styled';\nimport { useLocation } from 'react-router-dom';\n\nexport const MoviesGallery = ({ movies }) => {\n  const location = useLocation();\n  return (\n    <List>\n      {movies.map(movie => (\n        <MoviesGalleryItem\n          movie={movie}\n          key={movie.id}\n          state={{ from: location }}\n        />\n      ))}\n    </List>\n  );\n};\n","import { Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\nconst StyledLink = styled(Link)`\n  display: inline-flex;\n  align-items: center;\n  gap: 4px;\n  padding: 8px 0;\n  color: black;\n  text-decoration: none;\n  font-weight: 500;\n  text-transform: uppercase;\n\n  :hover {\n    color: orangered;\n  }\n`;\n\nexport const BackLink = ({ to, children }) => {\n  return <StyledLink to={to}>{children}</StyledLink>;\n};\n","import { Field, Form, Formik } from 'formik';\n\nexport const SearchBar = ({ onSubmit }) => {\n  return (\n    <>\n      <Formik\n        initialValues={{ query: ' ' }}\n        onSubmit={(values, { resetForm }) => {\n          onSubmit(values.query.trim());\n          resetForm();\n        }}\n      >\n        <Form>\n          <Field\n            as=\"input\"\n            autoComplete=\"off\"\n            placeholder=\"Search movie...\"\n            name=\"query\"\n            autoFocus\n          />\n          <button type=\"submit\">Search</button>\n        </Form>\n      </Formik>\n    </>\n  );\n};\n","import { BackLink } from '../components/BackLink/BackLink';\nimport Loader from '../components/Loader/Loader';\nimport { MoviesGallery } from '../components/MoviesGallery/MoviesGallery';\nimport { SearchBar } from 'components/SearchBar/SearchBar';\nimport React, { useEffect, useRef, useState } from 'react';\nimport { useLocation, useSearchParams } from 'react-router-dom';\nimport { getMovieByQuery } from '../servise/api';\n\nconst MoviesPage = () => {\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [movies, setMovies] = useState([]);\n\n  const [searchParams, setSearchParams] = useSearchParams();\n  const query = searchParams.get('query') || '';\n  console.log(query);\n\n  const location = useLocation();\n  const backLinkLocationRef = useRef(location.state?.from ?? '/');\n\n  useEffect(() => {\n    (async () => {\n      try {\n        if (query === '') return;\n        setIsLoading(true);\n        setError(null);\n\n        const data = await getMovieByQuery(query);\n        //console.log(data);\n        if (data.total_results === 0) {\n          alert(\n            `Sorry, there are no images matching your search query '${query}'. Please try again.`\n          );\n          return;\n        }\n        setMovies(data.results);\n      } catch (error) {\n        setError(error.message);\n      } finally {\n        setIsLoading(false);\n      }\n    })();\n  }, [query, location.search]);\n\n  const updateQueryString = value => {\n    if (value === '') {\n      setSearchParams({});\n      return;\n    }\n    setSearchParams({ query: value });\n    setMovies([]);\n  };\n\n  return (\n    <>\n      <BackLink to={backLinkLocationRef.current} children={'Go back'} />\n      <SearchBar onSubmit={updateQueryString} />\n      {/* Перевіряємо, чи відбувається завантаження */}\n      {isLoading && <Loader />}\n\n      {/* Перевіряємо, чи є помилка */}\n      {error && !isLoading && (\n        <h2 style={{ textAlign: 'center' }}>\n          Try again. Something went wrong!\n        </h2>\n      )}\n\n      {!error && !isLoading && movies.length > 0 && (\n        <MoviesGallery movies={movies} state={{ from: location }} />\n      )}\n    </>\n  );\n};\nexport default MoviesPage;\n","import axios from 'axios';\n\nconst apiKey = 'a7b06e7a05ba5e2eb883b74f2a4c575a';\n\n//trending/get-trending список найпопулярніших фільмів на сьогодні для створення колекції на головній сторінці.\n\nexport async function getTrendingMovies() {\n  try {\n    const { data } = await axios.get(\n      `https://api.themoviedb.org/3/trending/movie/day?api_key=${apiKey}&include_adult=false`\n    );\n    return data;\n  } catch (error) {\n    console.log('Error: ', error);\n  }\n}\n//search/search-movies пошук фільму за ключовим словом на сторінці фільмів.\n\nexport async function getMovieByQuery(query) {\n  try {\n    const { data } = await axios.get(\n      `https://api.themoviedb.org/3/search/movie?api_key${apiKey}&query=${query}&page=1&include_adult=false`\n    );\n    return data;\n  } catch (error) {\n    console.log('Error: ', error);\n  }\n}\n\n//movies/get-movie-details запит повної інформації про фільм для сторінки кінофільму.\n\nexport async function getMovieDetails(movieId) {\n  try {\n    const { data } = await axios.get(\n      `https://api.themoviedb.org/3/movie/${movieId}?api_key=${apiKey}&language=en-US`\n    );\n\n    return data;\n  } catch (error) {\n    console.log('Error: ', error);\n  }\n}\n\n//movies/get-movie-credits запит інформації про акторський склад для сторінки кінофільму.\n\nexport const getMoviesCredits = async movieId => {\n  try {\n    const { data } = await axios.get(\n      `https://api.themoviedb.org/3/movie/${movieId}/credits?api_key=${apiKey}`\n    );\n    // console.log(data.cast);\n    return data.cast;\n  } catch (error) {\n    console.log('Error: ', error);\n  }\n};\n\n//movies/get-movie-reviews запит оглядів для сторінки кінофільму.\n\nexport const getMoviesReviews = async movieId => {\n  try {\n    const { data } = await axios.get(\n      `https://api.themoviedb.org/3/movie/${movieId}/reviews?api_key=${apiKey}`\n    );\n    return data.results;\n  } catch (error) {\n    console.log('Error: ', error);\n  }\n};\n"],"names":["LoaderBackdrop","styled","color","size","css","position","top","left","Item","MovieTitle","MoviesGalleryItem","movie","id","poster_path","title","location","useLocation","to","state","from","List","MoviesGallery","movies","map","StyledLink","Link","BackLink","children","SearchBar","onSubmit","initialValues","query","values","resetForm","trim","as","autoComplete","placeholder","name","autoFocus","type","useState","isLoading","setIsLoading","error","setError","setMovies","useSearchParams","searchParams","setSearchParams","get","console","log","backLinkLocationRef","useRef","useEffect","getMovieByQuery","data","total_results","alert","results","message","search","current","value","Loader","style","textAlign","length","apiKey","getTrendingMovies","axios"],"sourceRoot":""}